version: "3.6"

x-shared-environment: &shared-environment
  restart: unless-stopped
  networks:
    - infinity_base_chat_network

services:
  api:
    <<: *shared-environment
    image: node:22.12.0
    container_name: infinity_base_api
    environment:
      DB_URL: postgres
      NODE_ENV: development
      DATABASE_URL: 'postgres://postgres:infinity@postgres:5432/postgres'
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: infinity
      DB_NAME: postgres
      DB_PORT: 5432
    working_dir: /app
    volumes:
      - ./api:/app
    command: ["sh", "-c", "npm install && npx drizzle-kit generate --name=create_initial_tables && npx drizzle-kit migrate && npm run start:debug"]
    ports:
      - 3000:3000
      - 3001:3001
      - 4100:4100
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  postgres:
    <<: *shared-environment
    image: postgres
    container_name: infinity_base_postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: infinity
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5

  rabbitmq:
    <<: *shared-environment
    image: rabbitmq:management
    container_name: infinity_base_rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # consumer-work:
  #   <<: *shared-environment
  #   image: node:22.12.0
  #   working_dir: /app
  #   volumes:
  #     - ./consumer-work:/app
  #   container_name: infinity_base_consumer-work
  #   command: ["node", "--watch", "--experimental-strip-types", "index.ts"]
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #     wiremock:
  #       condition: service_healthy

  # webapp:
  #   <<: *shared-environment
  #   image: node:22.12.0
  #   working_dir: /app
  #   container_name: infinity_base_webapp
  #   command: ["sh", "-c", "npm install && npm run dev"]
  #   volumes:
  #     - ./webapp:/app/
  #   ports:
  #     - 5173:5173
  #   environment:
  #     - VITE_API_URL=http://localhost:3000
  #     - HOST=0.0.0.0
  #   depends_on:
  #     - api

volumes:
  postgres-data:

networks:
  infinity_base_chat_network:
    external: true